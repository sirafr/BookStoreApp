@page "/authors/"
@inject IClient httpClient
<h3>Index</h3>


@if (Authors == null)
{
    <div class="Alert alert-info">
        <h4>Loading Data...</h4>
    </div>
}
else
{
    <a href="/authors/create"><span class="oi oi-plus" aria-hidden="true"></span>Create</a>
    <br/>
    <table class="table table-responsive">
        <thead>
            <tr>
                <th>First Name</th>
                <th>Last Name</th>
                <th>Action Name</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var author in Authors)
            {
                <tr>
                    <th>@author.FirstName</th>
                    <th>@author.LastName</th>
                    <td>
                        <a class="btn-primary" href="/authors/details"><span class="oi oi-book" aria-hidden="true"></span>Details</a>
                        <a class="btn-warning" href="/authors/edit"><span class="oi oi-pencil" aria-hidden="true"></span>>Edit</a>
                        <a class="btn-danger" href="/authors/delete"><span class="oi oi-delete" aria-hidden="true"></span>Delete</a>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private List<AuthorReadOnlyDto> Authors;

    protected override async Task OnInitializedAsync()
    {
        Authors = (await httpClient.AuthorsAllAsync()).ToList();
    }



}
